<?php

namespace common\models;

use Yii;
use yii\helpers\Html;
use yii\helpers\Url;
use yii\web\Link;

/**
 * This is the model class for table "Post".
 *
 * @property integer $id
 * @property string $title
 * @property string $content
 * @property string $tags
 * @property integer $status
 * @property integer $create_time
 * @property integer $update_time
 * @property integer $author_id
 */
class Post extends \yii\db\ActiveRecord
{
	private $old_tags;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'post';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'content', 'status', 'author_id'], 'required'],
            [['content', 'tags'], 'string'],
            [['status', 'create_time', 'update_time', 'author_id'], 'integer'],
            [['title'], 'string', 'max' => 128],
            [['author_id'], 'exist', 'skipOnError' => true, 'targetClass' => Adminuser::className(), 'targetAttribute' => ['author_id' => 'id']],
            [['status'], 'exist', 'skipOnError' => true, 'targetClass' => Poststatus::className(), 'targetAttribute' => ['status' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => '标题',
            'content' => '内容',
            'tags' => '标签',
            'status' => '状态',
            'create_time' => '创建时间 ',
            'update_time' => '更新时间 ',
            'author_id' => '作者',
            'authorName' => '作者',
        ];
    }


    public function getStatus0(){
	    return $this->hasOne(Poststatus::class,['id'=>'status']);
    }
    public function getAuthor(){
    	return $this->hasOne(Adminuser::class,['id'=>'author_id']);
    }

	public function getComments()
	{
		return $this->hasMany(Comment::className(), ['post_id' => 'id']);
	}

	public function getActiveComments(){
		return $this->hasMany(Comment::className(), ['post_id' => 'id'])
			->where('status=:status',[':status'=>2])->orderBy('id desc');
	}
    //重写deforeSave方法
	public function beforeSave($insert)
	{
		if (parent::beforeSave($insert)){
			if ($insert){
				$this->create_time=time();
				$this->update_time=time();
			}else{
				$this->update_time=time();
			}
			return true;
		}else{
			return false;
		}
	}

	public function afterFind()
	{
		parent::afterFind(); // TODO: Change the autogenerated stub
		$this->old_tags=$this->tags;
	}

	/**
	 * @desc
	 * @author guomin
	 * @date 2018/7/13  20:29
	 * @param bool $insert
	 * @param array $changedAttributes
	 * @throws \yii\db\StaleObjectException
	 */
	public function afterSave($insert, $changedAttributes)
	{
		parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
		Tag::updateFrequency($this->old_tags,$this->tags);
	}

	/**
	 * @desc
	 * @author guomin
	 * @date 2018/7/13  20:29
	 * @throws \yii\db\StaleObjectException
	 */
	public function afterDelete()
	{
		parent::afterDelete(); // TODO: Change the autogenerated stub
		Tag::updateFrequency($this->tags,'');
	}

	public function getUrl(){
		return Yii::$app->urlManager->createAbsoluteUrl(
			['post/detail','id'=>$this->id,'title'=>$this->title]
		);
	}

	public function getBeginning($length=288){
		$tmpStr=strip_tags($this->content);
		$tmpLen=mb_strlen($tmpStr);

		$tmpStr=mb_substr($tmpStr,0,$length,'utf-8');
		return $tmpStr.($tmpLen>$length ?'...' :'');
	}


	public function getTagLinks(){
		$links=[];
		foreach (Tag::str2Arr($this->tags) as $tag) {
			$links[]=Html::a(Html::encode($tag),['post/index','PostSearch[tags]'=>$tag]);
		}
		return $links;
	}

	public function getCommentCount(){
		return Comment::find()->where(['post_id'=>$this->id,'status'=>2])->count();
	}


	/**
	 * @desc   给API提供自定义字段名
	 * @author guomin
	 * @date 2018/7/16  21:01
	 * @return array
	 */
	public function fields()
	{
		return [
			'id',
			'title',
			'content',
			'status'=>function($model){
				return $model->status0->name;
			},
			'createdBy'=>function($model){
				return $model->author->nickname;
			}
		];
	}


//	public function geLinks(){
//		return [
//			Link::REL_SELF=>Url::to(['post/view','id'=>$this->id],true)
//		];
//	}
}
